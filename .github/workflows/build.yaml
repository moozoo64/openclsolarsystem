name: CI

on:
  workflow_dispatch: # allows manual triggering
    inputs:
      create_release:
        description: 'Create new release'
        required: true
        type: boolean
# Fine-grant permission
# https://docs.github.com/en/actions/security-for-github-actions/security-guides/automatic-token-authentication#modifying-the-permissions-for-the-github_token
permissions:
  contents: write # for creating release
env:
  BRANCH_NAME: ${{ github.head_ref || github.ref_name }}
  RELEASE_VERSION: ${{ github.event.inputs.create_release && github.run_number }}

jobs:
  windows-msys2:
    runs-on: windows-latest

    strategy:
      fail-fast: false
      matrix:
        include:
          - { sys: UCRT64,  env: ucrt-x86_64,  build: Release }
          # - { sys: CLANG64, env: clang-x86_64, build: Release }

    steps:
      - name: Clone
        uses: actions/checkout@v4
      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.x.x'

      - name: Setup ${{ matrix.sys }}
        uses: msys2/setup-msys2@v2
        with:
          update: true
          location: C:\msys64
          release: false
          msystem: ${{matrix.sys}}
          install: >-
            base-devel
            git
            zip
            mingw-w64-${{matrix.env}}-gcc
            mingw-w64-${{matrix.env}}-gdb
            mingw-w64-${{matrix.env}}-toolchain
            mingw-w64-${{matrix.env}}-glew
            mingw-w64-${{matrix.env}}-cmake
            mingw-w64-${{matrix.env}}-opencl-headers
            mingw-w64-${{matrix.env}}-opencl-icd
            mingw-w64-${{matrix.env}}-wxwidgets3.2-common
            mingw-w64-${{matrix.env}}-wxwidgets3.2-msw
            mingw-w64-${{matrix.env}}-wxwidgets3.2-msw-cb_headers

      - name: Build OpenCLSolarSystem using Makefile
        shell: msys2 {0}
        run: |
          cd src/OpenCLSolarSystem
          mingw32-make -j8 BUILD_TYPE=Release ARCH=x64  

      - name: Build OrbToSlf using dotnet
        run: |
          cd src/OrbToSlf
          dotnet build --configuration Release --framework net8.0

      - name: Determine tag name
        id: tag
        shell: msys2 {0}
        run: |
          BUILD_NUMBER="$(git rev-list --count HEAD)"
          SHORT_HASH="$(git rev-parse --short=7 HEAD)"
          if [[ "${{ env.BRANCH_NAME }}" == "master" ]]; then
            echo "name=b${BUILD_NUMBER}" >> $GITHUB_OUTPUT
          else
            SAFE_NAME=$(echo "${{ env.BRANCH_NAME }}" | tr '/' '-')
            echo "name=${SAFE_NAME}-b${BUILD_NUMBER}-${SHORT_HASH}" >> $GITHUB_OUTPUT
          fi

      - name: Pack artifacts
        id: pack_artifacts
        if: ${{ true || ( github.event_name == 'push' && github.ref == 'refs/heads/master' ) || github.event.inputs.create_release == 'true' }}
        run: |
          mkdir -p .\src\OpenCLSolarSystem\Release_x64\OrbToSlf       
          Copy-Item .\licenses .\src\OpenCLSolarSystem\Release_x64\ -Recurse
          Copy-Item .\README.md .\src\OpenCLSolarSystem\Release_x64\
          Copy-Item .\license.txt .\src\OpenCLSolarSystem\Release_x64\
          Copy-Item .\src\OrbToSlf\OrbToSlfConsole\bin\Release\net8.0\* .\src\OpenCLSolarSystem\Release_x64\OrbToSlf\ -Recurse
          7z a OpenClSolarSystem-${{ steps.tag.outputs.name }}-${{matrix.env}}-${{ matrix.build }}.zip .\src\OpenCLSolarSystem\Release_x64\*

      - name: Upload artifacts
        if: ${{ true || ( github.event_name == 'push' && github.ref == 'refs/heads/master' ) || github.event.inputs.create_release == 'true' }}
        uses: actions/upload-artifact@v4
        with:
          path: OpenClSolarSystem-${{ steps.tag.outputs.name }}-${{matrix.env}}-${{ matrix.build }}.zip
          name: OpenClSolarSystem-${{ matrix.build }}.zip

      # - name: Build using CMake
      #   shell: msys2 {0}
      #   run: |
      #       cmake -B build
      #       cmake --build build --config ${{ matrix.build }} -j $(nproc)

      # - name: Clean after building using CMake
      #   shell: msys2 {0}
      #   run: |
      #       rm -rf build

      # - name: Build using CMake 
      #   shell: msys2 {0}
      #   run: |
      #       cmake -B build 
      #       cmake --build build --config ${{ matrix.build }} -j $(nproc)
        